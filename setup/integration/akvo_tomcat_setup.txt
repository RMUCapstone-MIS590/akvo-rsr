Apache Tomcat 6.x J2EE container setup
--------------------------------------
- Setup docs at http://tomcat.apache.org/tomcat-6.0-doc/setup.html
- Ubuntu specific setup notes for Tomcat 6 at http://www.howtogeek.com/howto/linux/installing-tomcat-6-on-ubuntu/
- More detailed Tomcat setup docs with additional security info at http://www.puschitz.com/InstallingTomcat.html

Note we need to install Tomcat 6.x as 5.5 isn't compatible with TeamCity.

 1) Install JDK 6:
      sudo aptitude -y install openjdk-6-jdk
 2) Download the Tomcat 6 .tar.gz file from http://tomcat.apache.org/download-60.cgi
 3) Extract the archive
      tar xzf apache-tomcat-6.0.20.tar.gz
 4) Copy the tomcat-native.tar.gz file out of the distribution and extract the file:
      cp apache-tomcat-6.0.20/bin/tomcat-native.tar.gz .
      tar xzf tomcat-native.tar.gz
 5) Move the extracted directory to /usr/local:
      sudo mv apache-tomcat-6.0.20 /usr/local/tomcat6
 7) Remove the bundled Windows files:
      rm /usr/local/tomcat6/bin/*.bat
      rm /usr/local/tomcat6/bin/*.exe
 8) Setup initial Tomcat users:
    a) Edit the /usr/local/tomcat6/conf/tomcat-users.xml file and add a 'manager' role and an associated akvodev user:
      <tomcat-users>
        <role rolename="manager"/>
        <user username="akvodev" password="***" roles="manager"/>
      </tomcat-users>
 9) Setup proxy support for Tomcat apps through Apache:
     - Follow the notes at http://tomcat.apache.org/tomcat-6.0-doc/proxy-howto.html
     a) If the apache2 package is installed (use "aptitude search apache2" to check) ensure the mod_proxy module is also installed
          sudo aptitude install -y libapache2-mod-proxy-html
     b) Edit /etc/apache2/httpd.conf and add the following lines: (where servername.akvo.org is replaced accordingly)

LoadModule  proxy_module            /usr/lib/apache2/modules/mod_proxy.so
LoadModule  proxy_ajp_module        /usr/lib/apache2/modules/mod_proxy_ajp.so
LoadModule  proxy_balancer_module   /usr/lib/apache2/modules/mod_proxy_balancer.so
LoadModule  proxy_connect_module    /usr/lib/apache2/modules/mod_proxy_connect.so
LoadModule  proxy_ftp_module        /usr/lib/apache2/modules/mod_proxy_ftp.so
LoadModule  proxy_http_module       /usr/lib/apache2/modules/mod_proxy_http.so

ProxyPass           /tomcat     http://servername.akvo.org:8080/
ProxyPass           /manager    http://servername.akvo.org:8080/manager
ProxyPassReverse    /manager    http://servername.akvo.org:8080/manager
ProxyPass           /docs       http://servername.akvo.org:8080/docs
ProxyPassReverse    /docs       http://servername.akvo.org:8080/docs
ProxyPass           /examples   http://servername.akvo.org:8080/examples
ProxyPassReverse    /examples   http://servername.akvo.org:8080/examples
ProxyPass           /images     http://servername.akvo.org:8080/images
ProxyPassReverse    /images     http://servername.akvo.org:8080/images
     
     c) Modify the port 8080 Connector in /usr/local/tomcat6/conf/server.xml to include the proxyPort="80" and useBodyEncodingForURI="true" attributes:
         <Connector port="8080" protocol="HTTP/1.1" proxyPort="80"
                    useBodyEncodingForURI="true"
                    connectionTimeout="20000"
                    redirectPort="8443" />
10) Restart the Apache web server:
      sudo apache2ctl restart
11) Start the Tomcat server manually:
      export JAVA_HOME=/usr/lib/jvm/java-6-openjdk
      /usr/local/tomcat6/bin/startup.sh
12) Check that you can see the index page at http://servername.akvo.org/tomcat
    - if necessary, check /usr/local/tomcat6/logs for errors
13) Stop the Tomcat server:
      /usr/local/tomcat6/bin/shutdown.sh
14) Remove any log files:
      sudo rm /usr/local/tomcat6/logs/*
15) Create a separate tomcat user with no login shell for running the Tomcat server:
      sudo groupadd tomcat
      sudo useradd -g tomcat -s /usr/sbin/nologin -m -d /home/tomcat tomcat
16) Change the ownership of the tomcat6 installation to tomcat:
      sudo chown -R tomcat.tomcat /usr/local/tomcat6
17) Create a script to start Tomcat automatically: sudo vim /etc/init.d/tomcat
18) Paste the following into the script:

#!/bin/sh
#
# Tomcat auto-start script
# 
# description: Starts Tomcat automatically on server startup
# processname: tomcat
# pidfile: /var/run/tomcat.pid

export JAVA_HOME=/usr/lib/jvm/java-6-openjdk
export PATH=$JAVA_HOME/bin:$PATH
export CATALINA_HOME=/usr/local/tomcat6
export CATALINA_BASE=/usr/local/tomcat6

case $1 in
start)
        su -p -s /bin/sh tomcat $CATALINA_HOME/bin/startup.sh
        ;; 
stop)   
        su -p -s /bin/sh tomcat $CATALINA_HOME/bin/shutdown.sh
        ;; 
restart)
        su -p -s /bin/sh tomcat $CATALINA_HOME/bin/shutdown.sh
        su -p -s /bin/sh tomcat $CATALINA_HOME/bin/startup.sh
        ;; 
esac    
exit 0
    
19) Make the script executable: sudo chmod 755 /etc/init.d/tomcat
20) Link the startup script to the startup directories:
      sudo ln -s /etc/init.d/tomcat /etc/rc1.d/K99tomcat
      sudo ln -s /etc/init.d/tomcat /etc/rc2.d/S99tomcat
21) Reboot the server so that Tomcat will be started automatically: sudo reboot
22) Once the server has restarted, check that Tomcat operates as expected:
      http://servername.akvo.org/tomcat
      http://servername.akvo.org/manager/html


Install the APR native library for Tomcat [optional, not working yet]
-----------------------------------------
- See http://tomcat.apache.org/tomcat-6.0-doc/apr.html
- Build notes in the jni/native/BUILDING file

1) Ensure the APR 1.2+ dev headers are installed:
    sudo aptitude -y install libapr1-dev
2) Ensure the OpenSSL 0.9.7+ dev headers are installed:
    sudo aptitude -y install libssl-dev
3) Ensure gcc and make are available -- install if necessary with:
    sudo aptitude -y install gcc
    sudo aptitude -y install make
4) Copy the tomcat-native.tar.gz file out of the unarchived apache-tomcat-6.0.20.tar.gz distribution:
    cp apache-tomcat-6.0.20/bin/tomcat-native.tar.gz .
    tar xzf tomcat-native.tar.gz
5) Build the APR-JNI wrapper:
    cd tomcat-native-1.1.16-src/jni/native
    export JAVA_HOME=/usr/lib/jvm/java-6-openjdk
    ./configure --with-apr=/usr/bin/apr-config --with-ssl=yes
    make
    sudo make install
6) The resulting files (libtcnative-1.so, etc.) will be installed in /usr/local/apr/lib
