Apache Tomcat 7.x J2EE container setup
--------------------------------------
- Setup docs at http://tomcat.apache.org/tomcat-7.0-doc/setup.html
- Tomcat Native setup notes: http://stackoverflow.com/questions/4235171/installing-tomcat-7-on-linux-system-with-native-library
- Some Ubuntu specific setup notes for Tomcat 7 at http://www.infiz.com/wordpress/2011/01/install-tomcat-7-manually-on-ubuntu-10-10-server-64bit/
- More detailed Tomcat setup docs with additional security info at http://www.puschitz.com/InstallingTomcat.html

Note we need to install Tomcat 6.x or later since 5.5 isn't compatible with TeamCity.


Install prerequisite system packages:
-------------------------------------
 1) Ensure gcc and make are available -- install if necessary with:
      sudo aptitude -y install gcc make
 2) Ensure the OpenSSL 0.9.7+ dev packages are installed:
      sudo aptitude -y install libssl libssl-dev openssl ssl-cert
 3) Ensure the APR 1.2+ dev headers are installed:
      sudo aptitude -y install libapr1 libapr1-dev libaprutil1
 4) Install JDK 6:
      sudo aptitude -y install openjdk-6-jdk openjdk-6-jre openjdk-6-jre-headless openjdk-6-jre-lib
 5) Install Apache Ant:
      sudo aptitude -y install ant ant-gcj

Install the APR native library for Tomcat
-----------------------------------------
- APR setup notes: http://tomcat.apache.org/tomcat-7.0-doc/apr.html
- Build notes in the jni/native/BUILDING file

 1) Download and extract the Tomcat 7 core archive from http://tomcat.apache.org/download-70.cgi
      tar -xvf apache-tomcat-7.0.xx.tar.gz
 2) Copy the tomcat-native.tar.gz file out of the distribution and extract the file:
      cp apache-tomcat-7.0.xx/bin/tomcat-native.tar.gz .
      tar -xzf tomcat-native.tar.gz
 3) Move the extracted directory to /usr/local:
      sudo mv apache-tomcat-7.0.xx /usr/local/tomcat7
 4) Build the APR-JNI wrapper:
      cd tomcat-native-1.1.xx-src/jni/native
      export JAVA_HOME=/usr/lib/jvm/java-6-openjdk
      ./configure --with-apr=/usr/bin/apr-config --with-ssl=yes
      make
      sudo make install
    The resulting files (libtcnative-1.so, etc.) will be installed in /usr/local/apr/lib
 5) Create symlinks for the APR libraries so that Tomcat can find these when starting up:
      cd /usr/lib
      sudo ln -s /usr/local/apr/lib/libtcnative-1.a libtcnative-1.a
      sudo ln -s /usr/local/apr/lib/libtcnative-1.la libtcnative-1.la
      sudo ln -s /usr/local/apr/lib/libtcnative-1.so libtcnative-1.so
      sudo ln -s /usr/local/apr/lib/libtcnative-1.so.0 libtcnative-1.so.0

Configure Tomcat installation:
------------------------------
 1) Remove the bundled Windows files:
      cd /usr/local/tomcat7/bin
      rm *.bat *.exe
 2) Setup Tomcat server management user accounts:
    a) Edit the /usr/local/tomcat7/conf/tomcat-users.xml file and add the following roles and an associated akvodev user:
      <tomcat-users>
        <role rolename="manager-gui"/>
        <role rolename="manager-script"/>
        <role rolename="admin-gui"/>
        <role rolename="admin-script"/>
        <user username="akvodev" password="[some_password_here]" roles="manager-gui,manager-script,admin-gui,admin-script"/>
      </tomcat-users>
 3) Setup proxy support for Tomcat apps through Apache:
     - Follow the notes at http://tomcat.apache.org/tomcat-7.0-doc/proxy-howto.html
     a) Ensure that the Apache packages are installed:
          sudo aptitude install -y apache2 apache2-utils libapache2-mod-proxy-html
     b) Edit /etc/apache2/httpd_tomcat7.conf and add the content from the following file:
        - setup/integration/config/etc/apache2/httpd_tomcat7.conf
     c) Edit the /usr/local/tomcat7/conf/server.xml configuration file:
        - disable SSL by setting SSLEngine="off" for the APR listener: (otherwise the APR takes ages to start up)
            <Listener className="org.apache.catalina.core.AprLifecycleListener" SSLEngine="off" />
        - configure the main connector to include the proxyPort="80" and useBodyEncodingForURI="true" attributes:
            <Connector port="8081" protocol="HTTP/1.1" proxyPort="80"
                       useBodyEncodingForURI="true"
                       connectionTimeout="20000"
                       redirectPort="8443" />

 4) Restart the Apache web server:
      sudo apache2ctl restart
 5) Start the Tomcat server manually:
      export JAVA_HOME=/usr/lib/jvm/java-6-openjdk
      /usr/local/tomcat7/bin/startup.sh
 6) Check that you can see the index page at http://ci.akvo.org/tomcat
    - if necessary, check /usr/local/tomcat7/logs for errors
 7) Stop the Tomcat server:
      /usr/local/tomcat7/bin/shutdown.sh
 8) Remove any log files:
      sudo rm /usr/local/tomcat7/logs/*
 9) Create a separate tomcat user with no login shell for running the Tomcat server:
      sudo groupadd tomcat
      sudo useradd -g tomcat -s /usr/sbin/nologin -m -d /home/tomcat tomcat
10) Change the ownership of the Tomcat installation to tomcat:
      sudo chown -R tomcat.tomcat /usr/local/tomcat7
11) Create or update the /usr/local/tomcat link:
      cd /usr/local
      sudo rm tomcat
      sudo ln -s /usr/local/tomcat7 tomcat
      sudo chown -h tomcat:tomcat tomcat
12) Create a script to start Tomcat automatically: sudo vim /etc/init.d/tomcat
      - paste the content from setup/integration/scripts/init.d/tomcat into the file
13) Make the script executable: sudo chmod 755 /etc/init.d/tomcat
14) Link the startup script to the startup directories:
      sudo ln -s /etc/init.d/tomcat /etc/rc1.d/K99tomcat
      sudo ln -s /etc/init.d/tomcat /etc/rc2.d/S99tomcat
15) Reboot the server so that Tomcat will be started automatically: sudo reboot
16) Once the server has restarted, check that Tomcat operates as expected:
      http://ci.akvo.org/tomcat
      http://ci.akvo.org/manager/html
