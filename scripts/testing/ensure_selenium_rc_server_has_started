#!/bin/bash

# Parameters:
# $1: rc_server_log_path
# $2: xvfb_log_path (optional)


function display_usage_and_exit
{
    echo "Usage: ensure_selenium_rc_server_has_started <rc_server_log_path> [xvfb_log_path]"
    echo "Optionally specify an xvfb_log_path to start the Selenium RC server in headless mode"
    exit -1
}

function verify_script_parameters
{
    # warn if extraneous parameters exist
    if [ -n "$3" ]; then
        echo ">> Unexpected number of parameters: $*"
        display_usage_and_exit
    fi

    # check if rc_server_log_path parameter exists
    if [ -z "$1" ]; then
        echo ">> Missing rc_server_log_path parameter"
        display_usage_and_exit
    fi
}

function ensure_xvfb_is_running_and_set_xvfb_display
{
    # Parameters:
    # $1: xvfb_log_path

    XVFB_LOG_PATH="$1"

    # export the Xvfb display if available
    if [ -e "$XVFB_LOG_PATH/xvfb.pid" -a -e "$XVFB_LOG_PATH/xvfb_display.txt" ]; then
        export DISPLAY="`cat $XVFB_LOG_PATH/xvfb_display.txt`"
    else
        echo ">> Xvfb does not appear to be running: xvfb.pid file not found in $XVFB_LOG_PATH"
        exit -1
    fi
}

SCRIPT_FILE_DIR="`dirname $0`"
TESTING_SCRIPTS_DIR="`cd $SCRIPT_FILE_DIR; pwd`"

function ensure_selenium_rc_server_is_running
{
    # Parameters:
    # $1: rc_server_log_path
    # $2: xvfb_log_path

    RC_SERVER_LOG_PATH="$1"

    # check if the Selenium RC server is already running
    if [ ! -e "$RC_SERVER_LOG_PATH/rc_server.pid" ]; then
        # check if the xvfb_log_path parameter was also provided
        if [ -n "$2" ]; then
            ensure_xvfb_is_running_and_set_xvfb_display "$2"

            "$TESTING_SCRIPTS_DIR/start_selenium_rc_server" "$RC_SERVER_LOG_PATH" "$2"
        else
            "$TESTING_SCRIPTS_DIR/start_selenium_rc_server" "$RC_SERVER_LOG_PATH"
        fi    
    fi
}

verify_script_parameters $*
ensure_selenium_rc_server_is_running "$1" "$2"
